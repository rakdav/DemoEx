<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAJBQTFRF////
        /wAA/+3t/6+v/3Z2/5ub//r6//Dw/319/6Gh/9ra/xwc/xgY/xQU/zk5/0RE/8/P/6Ki/8LC/0pK/6qq
        /1JS/7i4/1lZ/yIi//X1/5aW/w8P/z4+/+rq/+Tk/7Oz/zAw/4qK/8XF/4aG/3Nz/9/f/2pq/5CQ/ygo
        /2Nj/0hI/9XV/4iI/25u/zQ0/2RkZ63fYAAABnJJREFUeF7tnWt7ojoURisqoNSqVFHAS71VHWv7///d
        QXxFmzCeECIEZ69P87hJutcg5Ebk5YGY1rTnDfrNIAgWZ+wbvk4fbIN+3d0YPkpUCn/mHZ2aIMPWwUC5
        qmD2gjdkL0b46c1QtgqYve0YmWdgX6+M4zTj+bsQ/rgmqtAbdxgi5czsVlNUojNN4ftLGt02qtGXEVKV
        ZomKNGU6RJ45qOt8MW5yn8EIZ6Cv4uwHSebjw9NV0bCRYl4mPdSoGWZfupVgGerZ9vck+jF/Y6Xj99T6
        g+yU4KJWnWghNzV09BtQWUhNFU3Uqw8BMksjdJzd7iNmFzN2Xh3H6dy7Mzm6DRj9D2TG8LEOBnPPdd3l
        mehfCZ7nzfvbPY5kCVCzLtSR12/Gg4PxP3dFf+am9/TeLRyhCandNXsjdNM3Bjj+F+M5wnrQThvzboXv
        h94ORW6xEdSDZspNY5uh1XZTLmO9OjZrZHXDPlOCKf9FOw8xHZjxl2HGy8hKuZBbiOnAcoKkruwzdkrm
        /EnUqXM65+Zmwj5Copj8vepTo2kpvk86zpzdCiWvDDWaldoipytdRMRZouQVjQbC5hdyutJAKAMoeeVD
        n2k3n5++kBgaoOSVndaGA4QygJJXxvoMgy3eUKK15poLjQxTzmG1DE3Tj7D+zozvtA3uHZ+Kzxk683uV
        nHJS0SXYBJ+j9253Mpm83YFfjNkhIg7fLbpbSZRRt/s+3Nv5po+NI/6Wzoxz9NDbqEN3FrKncSa3lFsC
        sqOQBcrrz0SuB2u8o7z+hHInMW1mQVdsqSux1UHxCrCXGkryQyJ9kRtK8kNSfZEbSqpa0S2CN5mBllkl
        w28yTMNsoHQVIMNUKvUtzXSniYe7EUbKWoS2fLuXtGFxD/etGzPJ9YxhwYTfSLoh0LnxUKiavAuseFXb
        UGTRkQz1ZkSGEWSoN89vKDLYr7bhz9Mbiqz9P/85dHFsNTkKPLRZbcM1GUZU27Dx/IYCz91uWuedySvb
        XjVOrNmhcDiMPy8BbkfHn/hjbJyO8g5ckUG+GeGf1+2NE9wy4uvgHCgcq4sMLoRbP/78sqwfAYlM+OwK
        +2tpzyez632hmj0LGhmy23LIUBAyLBAylIQMC4QMJSHDAiFDSciwQMhQEs6ww201sA693xwQSPDZI3rc
        tJ+FQAI/Qc+ODztqtreZXL2cIb/NFYEE/nHjgB2sNhFIWLMzEnwmWfePpSNgWGcnOjoIJLRfEUlosobc
        9jBuzoUMZSHDCDIkwxgyJEN5yDCCDMkwhgzJUB4yjCBDMowhQzKUhwwjyJAMY8iQDOUhwwgyJMMYMizQ
        kP/Vx4IM+bVaRYbc2jK38lqW4Sv3bZLC5J7M1cewjkg+yDCCDMkwhgzJUB4yjCBDMowhQzKUhwwjyJAM
        Y8iQDOUhw4iCDC1u3zwZikGGEWRYOUNuP9XTGXIvXyRDMowpz5D/zRRtDB1Fez3Z94RqZKjoFYlkSIYn
        yDCCDMkwB2RIhieUGBrfiFx4OsMpGcryDxpuEUh4NsMaGZJhDBmS4QkyFIUMyfAEGUaQ4cvLjH27LRmK
        oq9hnpeO3zJCfQlfCCSUZugikhPOcIVAAhmSYQwZkmEOyPAJDW0EEgoy3OwQuUCGoggYsvmHCCS0O4gk
        VMtwvgs7t4RjBBLa499HdGot1rBfQwjUbNawXZhhA4GEzaDVv6XFPcljMUf0W9xPfrebCIHWkv0/OJRn
        WBAlnsOCKO4crhEomh773jUyFOUfNPxkb3IF4bIdCzIUhTP8KcnQK8xwL/KiyAfAdQ4fZjhiu1MF0Wc7
        tw8zHAq8OPkRBCESuPAww7ceIgWzxt9PeJhhbV3KheixnTZlhj+o74agBMUDt7pQ2yn6Ms1R3y1B0Zei
        ueQFa0NFzZbJNkMnju7UL6xZNP1Dk107PMFtMZNlgQp/MT7aq8Vie3qRckLzllYmUOgMqovZLhZfK5vd
        1XJGWas1RYW6cUR+CtijSs1oIz0F9FClXvwgOxX4NirViZCby8rDIe1OVjJbpbdyk+v0ls6If3lgLowG
        KtaFb0UdtisbvndaJs5AfXejzW7nKBW1FyHYsDNdJbJAToqx2J/bLQv+Z35VMV1rcRq7D3yXrTlgf1O4
        eJyGws5aCodFyadxVDeQyqPwe2X24P7UFbfzqUSj0ZIajk+3sJkFf7YcNLcruzC+gr53MCTawJeX/wBO
        9wiS6eFeXgAAAABJRU5ErkJggg==
</value>
  </data>
</root>